"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const db_1 = require("../db");
const client = require("../config");
class Guilds {
    static async fetch(target, targetName, targetUSER) {
        if (!target)
            console.error("missing target");
        if (!targetName)
            console.error("missing targetName");
        if (!targetUSER)
            console.error("missing TargetUserID");
        await db_1.pool.query("INSERT INTO guilds (guildID, guildName, prefixes, totalCommands) VALUES($1, $2, $3, $4) ON CONFLICT DO NOTHING", [target, targetName, client.prefix, 0]);
        await db_1.pool.query("INSERT INTO users (userID, cash, bank) VALUES($1, $2, $2) ON CONFLICT DO NOTHING", [targetUSER, 0]);
        let guildSettings = await db_1.pool.query("SELECT * FROM guilds WHERE guildID = $1;", [target]);
        if (!guildSettings)
            return false;
        return guildSettings;
    }
}
exports.default = Guilds;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VpbGRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC9ndWlsZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4QkFBNkI7QUFDN0IsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBRXBDLE1BQXFCLE1BQU07SUFDekIsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBYyxFQUFFLFVBQWtCLEVBQUUsVUFBVTtRQUMvRCxJQUFJLENBQUMsTUFBTTtZQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsVUFBVTtZQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUNyRCxJQUFJLENBQUMsVUFBVTtZQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUV2RCxNQUFNLFNBQUksQ0FBQyxLQUFLLENBQ2QsZ0hBQWdILEVBQ2hILENBQUMsTUFBTSxFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUN2QyxDQUFDO1FBQ0YsTUFBTSxTQUFJLENBQUMsS0FBSyxDQUNkLGtGQUFrRixFQUNsRixDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FDaEIsQ0FBQztRQUVGLElBQUksYUFBYSxHQUFHLE1BQU0sU0FBSSxDQUFDLEtBQUssQ0FDbEMsMENBQTBDLEVBQzFDLENBQUMsTUFBTSxDQUFDLENBQ1QsQ0FBQztRQUVGLElBQUksQ0FBQyxhQUFhO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDakMsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztDQUNGO0FBdkJELHlCQXVCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBvb2wgfSBmcm9tIFwiLi4vZGJcIjtcclxuY29uc3QgY2xpZW50ID0gcmVxdWlyZShcIi4uL2NvbmZpZ1wiKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEd1aWxkcyB7XHJcbiAgc3RhdGljIGFzeW5jIGZldGNoKHRhcmdldDogc3RyaW5nLCB0YXJnZXROYW1lOiBzdHJpbmcsIHRhcmdldFVTRVIpIHtcclxuICAgIGlmICghdGFyZ2V0KSBjb25zb2xlLmVycm9yKFwibWlzc2luZyB0YXJnZXRcIik7XHJcbiAgICBpZiAoIXRhcmdldE5hbWUpIGNvbnNvbGUuZXJyb3IoXCJtaXNzaW5nIHRhcmdldE5hbWVcIik7XHJcbiAgICBpZiAoIXRhcmdldFVTRVIpIGNvbnNvbGUuZXJyb3IoXCJtaXNzaW5nIFRhcmdldFVzZXJJRFwiKTtcclxuXHJcbiAgICBhd2FpdCBwb29sLnF1ZXJ5KFxyXG4gICAgICBcIklOU0VSVCBJTlRPIGd1aWxkcyAoZ3VpbGRJRCwgZ3VpbGROYW1lLCBwcmVmaXhlcywgdG90YWxDb21tYW5kcykgVkFMVUVTKCQxLCAkMiwgJDMsICQ0KSBPTiBDT05GTElDVCBETyBOT1RISU5HXCIsXHJcbiAgICAgIFt0YXJnZXQsIHRhcmdldE5hbWUsIGNsaWVudC5wcmVmaXgsIDBdXHJcbiAgICApO1xyXG4gICAgYXdhaXQgcG9vbC5xdWVyeShcclxuICAgICAgXCJJTlNFUlQgSU5UTyB1c2VycyAodXNlcklELCBjYXNoLCBiYW5rKSBWQUxVRVMoJDEsICQyLCAkMikgT04gQ09ORkxJQ1QgRE8gTk9USElOR1wiLFxyXG4gICAgICBbdGFyZ2V0VVNFUiwgMF1cclxuICAgICk7XHJcblxyXG4gICAgbGV0IGd1aWxkU2V0dGluZ3MgPSBhd2FpdCBwb29sLnF1ZXJ5KFxyXG4gICAgICBcIlNFTEVDVCAqIEZST00gZ3VpbGRzIFdIRVJFIGd1aWxkSUQgPSAkMTtcIixcclxuICAgICAgW3RhcmdldF1cclxuICAgICk7XHJcblxyXG4gICAgaWYgKCFndWlsZFNldHRpbmdzKSByZXR1cm4gZmFsc2U7XHJcbiAgICByZXR1cm4gZ3VpbGRTZXR0aW5ncztcclxuICB9XHJcbn1cclxuIl19